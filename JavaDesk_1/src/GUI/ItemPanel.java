/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.ItemDAO;
import DAO.SupplierDAO;
import DTO.Item;
import DTO.Supplier;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class ItemPanel extends javax.swing.JPanel {

    /**
     * Creates new form ItemPanel
     */
    boolean modifi=true;
    
    public ItemPanel() {
        initComponents();
        txticode.setEnabled(false);
        txtiname.setEnabled(false);
        txtiunit.setEnabled(false);
        txtiprice.setEnabled(false);
        //cbbSupplier.setEnabled(false);
        cbSupplying.setEnabled(false);
        btSavei.setEnabled(false);
        loadItems();
        loadSupCbb();

    }
    
    public void loadItems(){
        DefaultTableModel model=(DefaultTableModel) tbItem.getModel();
        try {
            
            ArrayList<Item> list=ItemDAO.getItems();
            if(list!=null && !list.isEmpty()){
                Vector header=new Vector();
                header.add("Code");
                header.add("Name");
                header.add("Supplier");
                header.add("Unit");
                header.add("Price");
                header.add("Supplying");
                Vector data=new Vector();
                for (Item i : list) {
                    Vector row=new Vector();
                    row.add(i.getIcode());
                    row.add(i.getIname());
                    row.add(i.getIscode()+"-"+i.getIsname());
                    row.add(i.getIunit());
                    row.add(i.getIprice());
                    row.add(i.getSupplying()==1?"True":"False");
                    data.add(row);
                }
                //DefaultTableModel model=(DefaultTableModel) tbItem.getModel();
                model.setDataVector(data, header);
            }
            else{
                model.setRowCount(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
       
        
    }
    public void loadSupCbb(){
        try {
            ArrayList<Supplier> list=SupplierDAO.getSuppliers();
            if(list!=null && !list.isEmpty()){
                cbbSupplier.removeAllItems();
                for (Supplier s : list) {
                    cbbSupplier.addItem(s.getScode()+"-"+s.getSname());
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    private boolean validData(){
        String s;
        s=txticode.getText().trim();
        txticode.setText(s);
        if(s.isEmpty()){
            JOptionPane.showMessageDialog(null, "The code is empty");
            txticode.requestFocus();
            return false;
        }
        s=txtiname.getText().trim();
        txtiname.setText(s);
        if(s.isEmpty()){
            JOptionPane.showMessageDialog(null, "The name is empty");
            txtiname.requestFocus();
            return false;
        }
        s=txtiunit.getText().trim();
        txtiunit.setText(s);
        if(s.isEmpty()){
            JOptionPane.showMessageDialog(null, "The unit is empty");
            txtiunit.requestFocus();
            return false;
        }
        s=txtiprice.getText().trim();
        txtiprice.setText(s);
        if(s.isEmpty() || !s.matches("^[0-9]+(\\.[0-9]+){0,1}$")){
            JOptionPane.showMessageDialog(null, "The price not null and must be a number");
            txtiprice.requestFocus();
            return false;
        }
        return true;
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbItem = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btNew = new javax.swing.JButton();
        btSavei = new javax.swing.JButton();
        btDeli = new javax.swing.JButton();
        txticode = new javax.swing.JTextField();
        txtiname = new javax.swing.JTextField();
        txtiunit = new javax.swing.JTextField();
        txtiprice = new javax.swing.JTextField();
        cbSupplying = new javax.swing.JCheckBox();
        cbbSupplier = new javax.swing.JComboBox<>();
        btRefresh = new javax.swing.JButton();

        tbItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Name", "Supplier", "Unit", "Price", "Supplying"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbItem.getTableHeader().setReorderingAllowed(false);
        tbItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbItemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbItem);

        jLabel1.setText("Item Code");

        jLabel2.setText("Item Name");

        jLabel3.setText("Supplier");

        jLabel4.setText("Unit");

        jLabel5.setText("Price");

        jLabel6.setText("Supplying");

        btNew.setText("Add New");
        btNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNewActionPerformed(evt);
            }
        });

        btSavei.setText("Save");
        btSavei.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveiActionPerformed(evt);
            }
        });

        btDeli.setText("Delete");
        btDeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeliActionPerformed(evt);
            }
        });

        txticode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txticodeFocusGained(evt);
            }
        });

        txtiname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtinameFocusGained(evt);
            }
        });
        txtiname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtinameActionPerformed(evt);
            }
        });

        txtiunit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtiunitFocusGained(evt);
            }
        });

        txtiprice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtipriceFocusGained(evt);
            }
        });

        cbSupplying.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbSupplyingFocusGained(evt);
            }
        });

        cbbSupplier.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbSupplier.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbbSupplierFocusGained(evt);
            }
        });

        btRefresh.setText("Refresh");
        btRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(cbSupplying))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txticode, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addGap(24, 24, 24)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addGap(39, 39, 39)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtiname)
                                    .addComponent(cbbSupplier, 0, 151, Short.MAX_VALUE)
                                    .addComponent(txtiunit)
                                    .addComponent(txtiprice)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btNew)
                                .addGap(26, 26, 26)
                                .addComponent(btSavei)
                                .addGap(30, 30, 30)
                                .addComponent(btDeli)))))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txticode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtiname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cbbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtiunit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtiprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cbSupplying))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btNew)
                            .addComponent(btSavei)
                            .addComponent(btDeli))
                        .addGap(29, 29, 29)
                        .addComponent(btRefresh)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtinameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtinameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtinameActionPerformed

    private void tbItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbItemMouseClicked
        // TODO add your handling code here:
        int pos=tbItem.getSelectedRow();
        if(pos>=0){
            txticode.setText(""+tbItem.getValueAt(pos, 0));
            txtiname.setText(""+tbItem.getValueAt(pos, 1));
            cbbSupplier.setSelectedItem(tbItem.getValueAt(pos, 2));
            txtiunit.setText(""+tbItem.getValueAt(pos, 3));
            txtiprice.setText(""+tbItem.getValueAt(pos, 4));
            String tmp=""+tbItem.getValueAt(pos, 5);
            if(tmp.equalsIgnoreCase("true")){
                cbSupplying.setSelected(true);
            }
            else{
                cbSupplying.setSelected(false);
            }
        }
        txticode.setEnabled(false);
        txtiname.setEnabled(true);
        txtiunit.setEnabled(true);
        txtiprice.setEnabled(true);
        cbbSupplier.setEnabled(true);
        cbSupplying.setEnabled(true);
        btSavei.setEnabled(false);
        modifi=true;
    }//GEN-LAST:event_tbItemMouseClicked

    private void btNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNewActionPerformed
        // TODO add your handling code here:
        int pos=tbItem.getSelectedRow();
        if(pos>=0){
            tbItem.removeRowSelectionInterval(pos, pos);
        }
        txticode.setEnabled(true);
        txtiname.setEnabled(true);
        txtiunit.setEnabled(true);
        txtiprice.setEnabled(true);
        cbbSupplier.setEnabled(true);
        cbSupplying.setEnabled(true);
        txticode.setText("");
        txtiname.setText("");
        txtiunit.setText("");
        txtiprice.setText("");
        cbbSupplier.setSelectedIndex(0);
        cbSupplying.setSelected(false);
        btSavei.setEnabled(true);
        modifi=false;
    }//GEN-LAST:event_btNewActionPerformed

    private void btSaveiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveiActionPerformed
        // TODO add your handling code here:
        if (validData()) {
            String code = txticode.getText();
            String name = txtiname.getText();
            String unit = txtiunit.getText();
            float price = Float.parseFloat(txtiprice.getText());
            int supplying = 0;
            if (cbSupplying.isSelected()) {
                supplying = 1;
            }
            String tmp = "" + cbbSupplier.getSelectedItem();
            String supCode = tmp.split("-")[0];
            if (price > 0) {
                if (modifi) {
                    try {
                        int result = ItemDAO.updateItems(code, name, unit, price, supplying, supCode);
                        if (result != 0) {
                            JOptionPane.showMessageDialog(null, "Update successfully");
                            loadItems();
                            txticode.setEnabled(false);
                            txtiname.setEnabled(false);
                            txtiunit.setEnabled(false);
                            txtiprice.setEnabled(false);
                            cbSupplying.setEnabled(false);
                            btSavei.setEnabled(false);
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }
                } else {
                    try {
                        int result = ItemDAO.insertItems(code, name, unit, price, supplying, supCode);
                        if (result != 0) {
                            JOptionPane.showMessageDialog(null, "Add successfully");
                            loadItems();
                            txticode.setEnabled(false);
                            txtiname.setEnabled(false);
                            txtiunit.setEnabled(false);
                            txtiprice.setEnabled(false);
                            cbSupplying.setEnabled(false);
                            btSavei.setEnabled(false);
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                        txticode.requestFocus();
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "The price must be >0");
                txtiprice.requestFocus();
            }
        }
    }//GEN-LAST:event_btSaveiActionPerformed

    private void btDeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeliActionPerformed
        // TODO add your handling code here:
        int pos=tbItem.getSelectedRow();
        if(pos>=0){
            int option = JOptionPane.showConfirmDialog(null, "Are you sure to delete?", "Deletion",
                    JOptionPane.YES_NO_OPTION);
            if (JOptionPane.YES_OPTION == option) {
                try {
                    String code = txticode.getText();
                    int result = ItemDAO.deleteItems(code);
                    if (result != 0) {
                        JOptionPane.showMessageDialog(null, "Delete Successfully");
                        loadItems();
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
            else{
                tbItem.removeRowSelectionInterval(pos, pos);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Select for deleting");
        }
        txticode.setEnabled(false);
        txtiname.setEnabled(false);
        txtiunit.setEnabled(false);
        txtiprice.setEnabled(false);
        cbSupplying.setEnabled(false);
        btSavei.setEnabled(false);
        txticode.setText("");
        txtiname.setText("");
        txtiunit.setText("");
        txtiprice.setText("");
    }//GEN-LAST:event_btDeliActionPerformed

    private void txticodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txticodeFocusGained
        // TODO add your handling code here:
        btSavei.setEnabled(true);
    }//GEN-LAST:event_txticodeFocusGained

    private void txtinameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtinameFocusGained
        // TODO add your handling code here:
        btSavei.setEnabled(true);
    }//GEN-LAST:event_txtinameFocusGained

    private void cbbSupplierFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbbSupplierFocusGained
        // TODO add your handling code here:
        btSavei.setEnabled(true);
    }//GEN-LAST:event_cbbSupplierFocusGained

    private void txtiunitFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtiunitFocusGained
        // TODO add your handling code here:
        btSavei.setEnabled(true);
    }//GEN-LAST:event_txtiunitFocusGained

    private void txtipriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtipriceFocusGained
        // TODO add your handling code here:
        btSavei.setEnabled(true);
    }//GEN-LAST:event_txtipriceFocusGained

    private void cbSupplyingFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbSupplyingFocusGained
        // TODO add your handling code here:
        btSavei.setEnabled(true);
    }//GEN-LAST:event_cbSupplyingFocusGained

    private void btRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRefreshActionPerformed
        // TODO add your handling code here:
        loadItems();
        loadSupCbb();
        txticode.setEnabled(false);
        txtiname.setEnabled(false);
        txtiunit.setEnabled(false);
        txtiprice.setEnabled(false);
        //cbbSupplier.setEnabled(false);
        cbSupplying.setEnabled(false);
        btSavei.setEnabled(false);
        txticode.setText("");
        txtiname.setText("");
        txtiunit.setText("");
        txtiprice.setText("");
    }//GEN-LAST:event_btRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDeli;
    private javax.swing.JButton btNew;
    private javax.swing.JButton btRefresh;
    private javax.swing.JButton btSavei;
    private javax.swing.JCheckBox cbSupplying;
    public javax.swing.JComboBox<String> cbbSupplier;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tbItem;
    private javax.swing.JTextField txticode;
    private javax.swing.JTextField txtiname;
    private javax.swing.JTextField txtiprice;
    private javax.swing.JTextField txtiunit;
    // End of variables declaration//GEN-END:variables
}
