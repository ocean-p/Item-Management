/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.ItemDAO;
import DAO.SupplierDAO;
import DTO.Item;
import DTO.Supplier;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class SupplierPanel extends javax.swing.JPanel {

    /**
     * Creates new form SuppilerPanel
     */
    boolean modify=true;
    
    public SupplierPanel() {
        initComponents();
        txtScode.setEnabled(false);
        txtSname.setEnabled(false);
        txtSaddress.setEnabled(false);
        cbScolab.setEnabled(false);
        btSave.setEnabled(false);
        loadSuppliers();
    }
    void loadSuppliers(){
        DefaultTableModel model=(DefaultTableModel) tbSupplier.getModel();
        try {
            ArrayList<Supplier> list = SupplierDAO.getSuppliers();
            if (list != null && !list.isEmpty()) {
                Vector header = new Vector();
                header.add("Code");
                header.add("Name");
                header.add("Address");
                Vector data = new Vector();
                for (Supplier s : list) {
                    Vector row = new Vector();
                    row.add(s.getScode());
                    row.add(s.getSname());
                    row.add(s.getSaddress());
                    data.add(row);
                }
                model.setDataVector(data, header);
            } else {
                model.setRowCount(0);
            }
            //lay model cua control table
            //DefaultTableModel model=(DefaultTableModel) tbSupplier.getModel();
            //model.setDataVector(data, header);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }
    
    private boolean validData(){
        String s;
        s=txtScode.getText().trim();
        txtScode.setText(s);
        if(s.isEmpty()){
            JOptionPane.showMessageDialog(null, "The code is empty");
            txtScode.requestFocus();
            return false;
        }
        s=txtSname.getText().trim();
        txtSname.setText(s);
        if(s.isEmpty()){
            JOptionPane.showMessageDialog(null, "The name is empty");
            txtSname.requestFocus();
            return false;
        }
        s=txtSaddress.getText().trim();
        txtSaddress.setText(s);
        if(s.isEmpty()){
            JOptionPane.showMessageDialog(null, "The address is empty");
            txtSaddress.requestFocus();
            return false;
        }
       
        return true;
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtScode = new javax.swing.JTextField();
        txtSname = new javax.swing.JTextField();
        txtSaddress = new javax.swing.JTextField();
        cbScolab = new javax.swing.JCheckBox();
        btAdd = new javax.swing.JButton();
        btSave = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbSupplier = new javax.swing.JTable();

        jLabel1.setText("Code");

        jLabel2.setText("Name");

        jLabel3.setText("Address");

        jLabel4.setText("Collaborating");

        txtScode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtScodeFocusGained(evt);
            }
        });

        txtSname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSnameFocusGained(evt);
            }
        });
        txtSname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSnameKeyReleased(evt);
            }
        });

        txtSaddress.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSaddressFocusGained(evt);
            }
        });

        cbScolab.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cbScolabStateChanged(evt);
            }
        });
        cbScolab.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbScolabFocusGained(evt);
            }
        });
        cbScolab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbScolabMouseClicked(evt);
            }
        });

        btAdd.setText("Add New");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btSave.setText("Save");
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });

        btDelete.setText("Delete");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        tbSupplier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Name", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbSupplier.getTableHeader().setReorderingAllowed(false);
        tbSupplier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbSupplierMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbSupplier);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(cbScolab))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtScode, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSname, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btAdd)
                        .addGap(28, 28, 28)
                        .addComponent(btSave, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(btDelete)))
                .addGap(59, 59, 59))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtScode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtSname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtSaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(cbScolab))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btAdd)
                            .addComponent(btSave)
                            .addComponent(btDelete))
                        .addGap(127, 127, 127))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(69, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tbSupplierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbSupplierMouseClicked
        // TODO add your handling code here:
        
        int pos=tbSupplier.getSelectedRow();
        
        if(pos>=0){
            txtScode.setText(""+tbSupplier.getValueAt(pos, 0));
            txtSname.setText(""+tbSupplier.getValueAt(pos, 1));
            txtSaddress.setText(""+tbSupplier.getValueAt(pos, 2));
            try {
                String code=""+tbSupplier.getValueAt(pos, 0);
                int result=SupplierDAO.getCollab(code);
                if(result==1){
                    cbScolab.setSelected(true);
                }
                else if(result==0){
                    cbScolab.setSelected(false);
                }
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
        txtScode.setEnabled(false);
        txtSname.setEnabled(true);
        txtSaddress.setEnabled(true);
        cbScolab.setEnabled(true);
        btSave.setEnabled(false);
        modify=true;
    }//GEN-LAST:event_tbSupplierMouseClicked

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        // TODO add your handling code here:
        int pos=tbSupplier.getSelectedRow();
        if(pos>=0){
            tbSupplier.removeRowSelectionInterval(pos, pos);
        }
        txtScode.setEnabled(true);
        txtSname.setEnabled(true);
        txtSaddress.setEnabled(true);
        cbScolab.setEnabled(true);
        txtScode.setText("");
        txtSname.setText("");
        txtSaddress.setText("");
        cbScolab.setSelected(false);
        btSave.setEnabled(true);
        
        modify=false;
    }//GEN-LAST:event_btAddActionPerformed

    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
        // TODO add your handling code here:
        if (validData()) {
            String code = txtScode.getText();
            String name = txtSname.getText();
            String address = txtSaddress.getText();
            int collab = 0;
            if (cbScolab.isSelected()) {
                collab = 1;
            }
            if (modify) {
                try {
                    int result = SupplierDAO.updateSuppliers(code, name, address, collab);
                    if (result != 0) {
                        JOptionPane.showMessageDialog(null, "Update Successfully");
                        loadSuppliers();
                        txtScode.setEnabled(false);
                        txtSname.setEnabled(false);
                        txtSaddress.setEnabled(false);
                        cbScolab.setEnabled(false);
                        btSave.setEnabled(false);
                    } else {
                        JOptionPane.showMessageDialog(null, "Update Fail");
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            } else {
                try {
                    int result = SupplierDAO.insertSuppliers(code, name, address, collab);
                    if (result != 0) {
                        JOptionPane.showMessageDialog(null, "Add Successfully");
                        loadSuppliers();
                        txtScode.setEnabled(false);
                        txtSname.setEnabled(false);
                        txtSaddress.setEnabled(false);
                        cbScolab.setEnabled(false);
                        btSave.setEnabled(false);
                    } else{
                        JOptionPane.showMessageDialog(null, "Add Fail");
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
        }

    }//GEN-LAST:event_btSaveActionPerformed

    private void txtScodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtScodeFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtScodeFocusGained

    private void txtSnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSnameFocusGained
        // TODO add your handling code here:
        btSave.setEnabled(true);
    }//GEN-LAST:event_txtSnameFocusGained

    private void txtSnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSnameKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtSnameKeyReleased

    private void txtSaddressFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSaddressFocusGained
        // TODO add your handling code here:
        btSave.setEnabled(true);
    }//GEN-LAST:event_txtSaddressFocusGained

    private void cbScolabStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cbScolabStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cbScolabStateChanged

    private void cbScolabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbScolabMouseClicked
        // TODO add your handling code here:
        //btSave.setEnabled(true);
    }//GEN-LAST:event_cbScolabMouseClicked

    private void cbScolabFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbScolabFocusGained
        // TODO add your handling code here:
         btSave.setEnabled(true);
    }//GEN-LAST:event_cbScolabFocusGained

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        // TODO add your handling code here:
        int pos=tbSupplier.getSelectedRow();
        //String code=""+tbSupplier.getValueAt(pos, 0);
        if (pos >= 0) {

            int option = JOptionPane.showConfirmDialog(null, "Are you sure to delete?", "Deletion",
                    JOptionPane.YES_NO_OPTION);
            if (JOptionPane.YES_OPTION == option) {
                try {
                    String code = "" + tbSupplier.getValueAt(pos, 0);
                    int result = SupplierDAO.deleteSuppliers(code);
                    if (result != 0) {
                        JOptionPane.showMessageDialog(null, "Delete Successfully");
                        loadSuppliers();                                              
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
            else{
                tbSupplier.removeRowSelectionInterval(pos, pos);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Choose for deleting");
        }
        //tbSupplier.removeRowSelectionInterval(pos, pos);
        txtScode.setEnabled(false);
        txtSname.setEnabled(false);
        txtSaddress.setEnabled(false);
        cbScolab.setEnabled(false);
        txtScode.setText("");
        txtSname.setText("");
        txtSaddress.setText("");
    }//GEN-LAST:event_btDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btSave;
    private javax.swing.JCheckBox cbScolab;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbSupplier;
    private javax.swing.JTextField txtSaddress;
    private javax.swing.JTextField txtScode;
    private javax.swing.JTextField txtSname;
    // End of variables declaration//GEN-END:variables
}
